library(HMM)
hmm = initHMM(c("X","Y"),c("a","b","c"))#
simHMM(hmm, 100)
viterbi(hmm,test.dat[[2]])
viterbi(hmm,test.dat$obseration )
simHMM(hmm, 100) -> test.dat
viterbi(hmm,test.dat$obseration )
viterbi(hmm,test.dat$observation )
forward(hmm, test.dat$observation)
hmm = initHMM(c("X","Y"),c("a","b","c"))#
simHMM(hmm, 100) -> test.dat#
#
viterbi(hmm,test.dat$observation )
test.dat
forward(hmm, test.dat$observation)
a = sample(c(rep("L",100),rep("R",300))) b = sample(c(rep("L",300),rep("R",100))) observation = c(a,b)
a = sample(c(rep("L",100),rep("R",300)))#
b = sample(c(rep("L",300),rep("R",100)))#
observation = c(a,b)
observation
viterbi(hmm,observation )
a = sample(c(rep("X",100),rep("Y",300)))#
b = sample(c(rep("X",300),rep("Y",100)))#
observation = c(a,b)#
#
viterbi(hmm, observation )
a = sample(c(rep("a",100),rep("c",300)))#
b = sample(c(rep("a",300),rep("c",100)))#
observation = c(a,b)#
#
viterbi(hmm, observation )
observation
hmm = initHMM(c("A","B"), c("L","R"), transProbs=matrix(c(.6,.4,.4,.6),2), emissionProbs=matrix(c(.6,.4,.4,.6),2)) #
#
print(hmm)#
#
# Sequence of observations observations = c("L","L","R","R") # Calculate Viterbi path#
viterbi = viterbi(hmm,observations)#
print(viterbi)
hmm = initHMM(c("A","B"), c("L","R"), transProbs=matrix(c(.6,.4,.4,.6),2), emissionProbs=matrix(c(.6,.4,.4,.6),2)) #
#
print(hmm)#
#
# Sequence of observations#
observations = c("L","L","R","R") # Calculate Viterbi path#
viterbi = viterbi(hmm,observations)#
print(viterbi)
fw = forward(hmm, observations)
fw
print(fw)
?initHMM
matrix(c(.6,.4,.4,.6),2)
matrix(c(.6,.4,.4,.4,.6.4,.6),3))
matrix(c(.6,.4,.4,.4,.6.4,.6),3)
matrix(c(.6,.4,.4,.4,.6,.4,.6),3)
transProbs=matrix(c(.6,.4,.4,.4,.6,.4,.4,.6,.4),3)
transProbs
emissionProbs=matrix(rep(0.9,9),3)
emissionProbs
gt.hmm <- initHMM(c("ref, het, alt"), c("0","0.5","1"), transProbs=matrix(c(.6,.4,.4,.4,.6,.4,.4,.6,.4),3), emissionProbs=matrix(rep(0.9,9),3))
gt.hmm <- initHMM(c("ref", "het", "alt"), c("0","0.5","1"), transProbs=matrix(c(.6,.4,.4,.4,.6,.4,.4,.6,.4),3), emissionProbs=matrix(rep(0.9,9),3))
obs <- c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0.5,0.5,0.5,0.5)
obs
gt.vit <- viterbi(gt.hmm, obs)
emissionProbs
transProbs
obs <- c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0.5,0.5,0.5,0.5)
class(obs)
obs <- as.character(obs)
obs
gt.vit <- viterbi(gt.hmm, obs)
gt.vit
gt.hmm <- initHMM(c("ref", "het", "alt"), c("0","0.5","1"), transProbs=matrix(c(.1,.1,.1,.1,.1,.1,.1,.1,.1),3), emissionProbs=matrix(rep(0.9,9),3))#
#
obs <- c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0.5,0.5,0.5,0.5)#
obs <- as.character(obs)#
#
gt.vit <- viterbi(gt.hmm, obs)
gt.vit
gt.hmm <- initHMM(c("ref", "het", "alt"), c("0","0.5","1"), transProbs=matrix(c(.9,.9,.9,.9,.9,.9,.9,.9,.9),3), emissionProbs=matrix(rep(0.9,9),3))#
#
obs <- c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0.5,0.5,0.5,0.5)#
obs <- as.character(obs)#
#
gt.vit <- viterbi(gt.hmm, obs)
gt.vit
?initHMM
obs <- c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0.5,0.5,0.5,0.5)#
obs <- as.character(obs)#
#
gt.vit <- viterbi(gt.hmm, obs)
gt.vit
obs <- rep("1",100)
obs
gt.vit <- viterbi(gt.hmm, obs)
gt.fit
gt.vit
obs <- rep("0",100)#
obs <- as.character(obs)#
#
gt.vit <- viterbi(gt.hmm, obs)
gt.vit
gt.hmm
gt.hmm <- initHMM(c("ref", "het", "alt"), c("0","0.5","1"))
gt.hmm
gt.vit <- viterbi(gt.hmm, obs)
gt.fit
gt.vit
gt.hmm <- initHMM(c("ref", "het", "alt"), c("0","0.5","1"), emissionProbs=matrix(rep(0.9,9),3))#
obs <- c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0.5,0.5,0.5,0.5)#
obs <- rep("0",100)#
obs <- as.character(obs)#
#
gt.vit <- viterbi(gt.hmm, obs)
gt.vit
obs
obs <- rep("1",100)#
obs <- as.character(obs)#
#
gt.vit <- viterbi(gt.hmm, obs)
obs
gt.vit
hmm = initHMM(c("A","B"), c("L","R"), transProbs=matrix(c(.6,.4,.4,.6),2), emissionProbs=matrix(c(.6,.4,.4,.6),2)) #
#
print(hmm)#
#
# Sequence of observations#
observations = c("L","L","R","R")#
#
# Calculate Viterbi path#
viterbi = viterbi(hmm,observations)#
print(viterbi)
hmm
gt.hmm <- initHMM(c("ref", "het", "alt"), c("0","0.5","1"), transProbs=matrix(c(.9,.9,.9,.9,.9,.9,.9,.9,.9),3), emissionProbs=matrix(rep(0.9,9),3))
gt.hmm
gt.hmm <- initHMM(c("ref", "het", "alt"), c("0","0.5","1"), transProbs=matrix(c(.9,.1,.1,.1,.9,.1,.1,.1,.1),3), emissionProbs=matrix(rep(0.9,9),3))
gt.hmm
gt.hmm <- initHMM(c("ref", "het", "alt"), c("0","0.5","1"), transProbs=matrix(c(.9,.1,.1,.1,.9,.1,.1,.1,.1),3), emissionProbs=matrix(c(.9,.1,.1,.1,.9,.1,.1,.1,.1),3))
obs <- c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0.5,0.5,0.5,0.5)#
obs <- rep("1",100)#
obs <- as.character(obs)#
#
gt.vit <- viterbi(gt.hmm, obs)
gt.vit
obs
gt.hmm
ob
obs
gt.vit <- viterbi(gt.hmm, obs)
gt.vit
obs <- c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0.5,0.5,0.5,0.5)#
#obs <- rep("1",100)#
obs <- as.character(obs)#
#
gt.vit <- viterbi(gt.hmm, obs)
gt.vit
plot(obs, gt.vit)
table(obs, gt.vit)
emissionProbs=matrix(c(.9,.1,.1,.1,.9,.1,.1,.1,.1),3)
emissionProbs
gyt.hmm
gt.hmm
gt.hmm <- initHMM(c("ref", "het", "alt"), c("0","0.5","1"), transProbs=matrix(c(.9,.1,.1,.1,.9,.1,.1,.1,.9),3), emissionProbs=matrix(c(.9,.1,.1,.1,.9,.1,.1,.1,.9),3))#
obs <- c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0.5,0.5,0.5,0.5)#
#obs <- rep("1",100)#
obs <- as.character(obs)#
#
gt.vit <- viterbi(gt.hmm, obs)
gt.vit
table(obs,gt.vit)
obs[6]<-NA#
#
gt.vit <- viterbi(gt.hmm, obs)
obs <- c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0.5,0.5,0.5,0.5)#
#obs <- rep("1",100)#
obs <- as.character(obs)
gt.vit <- viterbi(gt.hmm, obs)
gt.vit
obs <- c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0.5,0.5,0.5,1,0.5)#
#obs <- rep("1",100)#
obs <- as.character(obs)#
#
gt.vit <- viterbi(gt.hmm, obs)
gt.vit
obs
64/3
300/5
test <- apply(all.gts,1, table)
all.gts.alt <- apply(all.gts,1, sum)
source("./allele.freq.change.fxns.R")
all.gts.file <- "/Volumes/field_experiments/007.pilot.sequencing/018.genotyping.by.plate/997.Swedes.220.10May2016/02.2.3M_Swedes220/02_2.3M_Swedes220.175k.prior15.gauss4.ts99.5.BIALLELIC.csv"#
## this is the data set used for genotyping these samples (from Fernando)#
#
min.MAF <- 0.1#
max.NAF <- 0.05 ## remove if NA rate is higher than this#
### set these so agree with Ben's GWAS filtering so our SNPs overlap#
#
gts.prep <- prep.SAF(all.gts.file="/Volumes/field_experiments/007.pilot.sequencing/018.genotyping.by.plate/997.Swedes.220.10May2016/02.2.3M_Swedes220/02_2.3M_Swedes220.175k.prior15.gauss4.ts99.5.BIALLELIC.csv", min.MAF=0.1, max.NAF=0.05)
source("./allele.freq.change.fxns.R")
all.gts.file <- "/Volumes/field_experiments/007.pilot.sequencing/018.genotyping.by.plate/997.Swedes.220.10May2016/02.2.3M_Swedes220/02_2.3M_Swedes220.175k.prior15.gauss4.ts99.5.BIALLELIC.csv"#
## this is the data set used for genotyping these samples (from Fernando)#
#
min.MAF <- 0.1#
max.NAF <- 0.05 ## remove if NA rate is higher than this#
### set these so agree with Ben's GWAS filtering so our SNPs overlap#
#
gts.prep <- prep.SAF(all.gts.file="/Volumes/field_experiments/007.pilot.sequencing/018.genotyping.by.plate/997.Swedes.220.10May2016/02.2.3M_Swedes220/02_2.3M_Swedes220.175k.prior15.gauss4.ts99.5.BIALLELIC.csv", min.MAF=0.1, max.NAF=0.05)#
### this is a bit slow because it incorporates reading in and recoding the file.
source("./allele.freq.change.fxns.R")
all.gts.file <- "/Volumes/field_experiments/007.pilot.sequencing/018.genotyping.by.plate/997.Swedes.220.10May2016/02.2.3M_Swedes220/02_2.3M_Swedes220.175k.prior15.gauss4.ts99.5.BIALLELIC.csv"#
## this is the data set used for genotyping these samples (from Fernando)#
#
min.MAF <- 0.1#
max.NAF <- 0.05 ## remove if NA rate is higher than this#
### set these so agree with Ben's GWAS filtering so our SNPs overlap#
#
gts.prep <- prep.SAF(all.gts.file="/Volumes/field_experiments/007.pilot.sequencing/018.genotyping.by.plate/997.Swedes.220.10May2016/02.2.3M_Swedes220/02_2.3M_Swedes220.175k.prior15.gauss4.ts99.5.BIALLELIC.csv", min.MAF=0.1, max.NAF=0.05)
exp.dat.good.s <- split(exp.dat.good, exp.dat.good$sp)#
EAF.alt <- endAF(exp.dat.good.s=exp.dat.good.s,gts.prep=gts.prep)#
#
########################################################
#### step five: calculate allele frequency change in North and South#
##########################################################
#
AFD.alt <- EAF.alt-SAF.alt[,3]
plot.EAF <- plot.mean.EAF(EAF.alt=EAF.alt, plot.index=plot.index)#
### get mean allele frequency differences by N/S#
ns.EAF <- NS.mean.EAF(plot.EAF)#
###############################################################
#### step seven: calculate relative fitness of each allele in North and South#
########################################################
### put this on pause for a bit 18Oct17#
ns.rel.fit.alt <- w.rel.fitness(SAF.alt=SAF.alt, ns.EAF=ns.EAF)#
ns.rel.fit.alt <- as.data.frame(ns.rel.fit.alt)#
smoothScatter(ns.rel.fit.alt$w.n,ns.rel.fit.alt$w.s)
perm.no <- 1#
out.gts <- matrix(NA, nrow=nrow(gts.prep), ncol=length(good.sam.per.plot))#
for (up in 1:length(good.sam.per.plot)){#
	print(up)#
	up.pn <- good.sam.per.plot[up]#
	print(up.pn)#
	p.c <- sample(1:ncol(gts.prep),replace=TRUE,up.pn)#
	p.dat <- gts.prep[,p.c]#
	p.af <- startAF(p.dat)#
	out.gts[,up]<-p.af[,3]#
}
54.5-3
58-51.5
7/2.5
51.5+7
68+56+5+62+11+50+159+114+8
5120-533
5078-533
5031-533
4917-533
4737-533
4689-533
4644-533
250*0.85
dim(my.data)
citation()
citation("ReadDepth")
library("ReadDepth")
citation("ape")
cite("phangorn")
log(10)
log(4)
log(3)
log(2)
log(1.5)
log(1)
23-6
6500*12
14.2*6
7.70*5
7.70*4
24/7.70
17.5*.78
17.5*.7
437/6
27*3
4773210/7.59
290*7.59
sra <- read.csv("~/Downloads/SraRunInfo.csv")
sra
head(sra)
tab <- read.table("~/Desktop/999.cyberduck.downloads/Supplementary.File.5.txt")
tab <- read.table("~/Desktop/999.cyberduck.downloads/Supplementary.File.5.txt", fill=TRUE)
head(tab)
tab <- read.table("~/Desktop/999.cyberduck.downloads/Supplementary.File.5.txt", fill=TRUE,header=TRUE)
tab <- read.table("~/Desktop/999.cyberduck.downloads/Supplementary.File.5.txt", fill=TRUE)
colnames(tab) <- c(tab[1,],"SRS","SRX","SRR")
ugh <- c(tab[1,],"SRS","SRX","SRR")
ugh
ugh <- c(as.character(tab[1,]),"SRS","SRX","SRR")
ugh
tab <- read.table("~/Desktop/999.cyberduck.downloads/Supplementary.File.5.txt", fill=TRUE, stringsAsFactors=FALSE)
tab
head(tab)
dim(tab)
tail(tab)
tab <- read.table("~/Desktop/999.cyberduck.downloads/Supplementary.File.5.txt", fill=TRUE, stringsAsFactors=FALSE, sep="\t")
tab
dim(tab)
head(tab)
tab <- read.table("~/Desktop/999.cyberduck.downloads/Supplementary.File.5.txt", fill=TRUE, stringsAsFactors=FALSE, sep="\t", header=TRUE)
head(tab)
head(sra)
dim(sra)
dim(tab)
head(tab)
tab$run%in%sra$Run
sra$Run%in%tab$run
8000976-8000449
528/3
21*28
library(markovchain)
30/4.4
68/12
6.15/80
0.076875 * 5
80/6/15
80/6.15
6*13
13*5
49*0.75
50*0;75
50*0.75
37.5/2
18.75x4
18.75*4
15.95 8 3
15.95 * 3
(35.5*100)/20
setwd()
getwd()
setwd("~/GWAS_workshop_CK/data/")
dir()
read.table("blups.txt", stringsAsFactors=FALSE)
read.table("blups.txt", stringsAsFactors=FALSE) -> data
head(data)
read.table("blups.txt", stringsAsFactors=FALSE, headers=TRUE) -> data
read.table("blups.txt", stringsAsFactors=FALSE, header=TRUE) -> data
head(data)
col.dat <- data[,grep("color", colnames(data))]
head(col.dat)
cbind(data[,1],col.dat[,2])
cbind(data[,1],col.dat[,2]) -> out.dat
head(out.dat)
dim(out.dat)
colnames(out.dat) <- c("ecotypeid","rosette_color")
head(out.dat)
dim(out.dat)
write.csv(out.dat, file="rosette.color.csv", quotes=FALSE)
write.csv(out.dat, file="rosette.color.csv", quote=FALSE)
?write.csv
write.csv(out.dat, file="rosette.color.csv", quote=FALSE, rownames=FALSE)
write.csv(out.dat, file="rosette.color.csv", quote=FALSE, rowname=FALSE)
write.csv(out.dat, file="rosette.color.csv", quote=FALSE, row.names=FALSE)
hist(out.dat[,2])
out.dat[,2]
dim(out.dat)
class(out.dat[,2])
class(out.dat[,1])
getwd9)
getwd()
dir()
pos <- read.csv("accs_2029_ids_lat_long.modified_MN_SH.csv",stringsAsFactors=FALSE, header=TRUE)
head(pos)
pos <- pos[pos$X1001g=="Y",]
dim(pos)
head(pos)
pos <- pos[,2:6]
head(pos)
colnames(pos)[1] <- ecotypeid
colnames(pos)[1] <- "ecotypeid"
head(pos)
class(pos)
write.csv(pos, file="accession_geo_locations.csv", quote=FALSE, row.names=FALSE)
